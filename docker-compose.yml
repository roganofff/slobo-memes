services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 10s
      retries: 3
    ports:
      - 127.0.0.1:${RABBIT_PORT}:5672
      - ${RABBIT_WEB_PORT}:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  postgres:
    image: 'postgres:15.5'
    container_name: postgres
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 1s
      timeout: 1s
      retries: 60
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  database:
    container_name: database
    build: ./database
    volumes:
      - ./database:/usr/src/slobo_memes/database
    command: bash -c "poetry run python -m alembic upgrade head && poetry run python -m src.app"
    stop_signal: SIGINT
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - database/config/.env

  bot:
    container_name: bot
    stop_signal: SIGINT
    build: ./bot
    volumes:
      - ./bot:/usr/src/slobo_memes/bot
    ports:
      - ${BOT_FASTAPI_PORT}:${BOT_FASTAPI_PORT}
    command: poetry run python -m src.app
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_started
    env_file:
      - bot/config/.env

volumes:
  postgres_data:
  rabbitmq_data: