services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - 127.0.0.1:${RABBIT_PORT}:5672
      - ${RABBIT_WEB_PORT}:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  database:
    image: 'postgres:15.5'
    container_name: database
    environment:
      - POSTGRES_HOST=${BOT_POSTGRES_HOST}
      - POSTGRES_PORT=${BOT_POSTGRES_PORT}
      - POSTGRES_DB=${BOT_POSTGRES_DB}
      - POSTGRES_USER=${BOT_POSTGRES_USER}
      - POSTGRES_PASSWORD=${BOT_POSTGRES_PASSWORD}
    ports:
      - ${BOT_POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${BOT_POSTGRES_DB}", "-U", "${BOT_POSTGRES_USER}" ]
      interval: 1s
      timeout: 1s
      retries: 60
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrates:
    build: ./database
    container_name: migrates
    environment:
      - POSTGRES_HOST=${BOT_POSTGRES_HOST}
      - POSTGRES_PORT=${BOT_POSTGRES_PORT}
      - POSTGRES_DB=${BOT_POSTGRES_DB}
      - POSTGRES_USER=${BOT_POSTGRES_USER}
      - POSTGRES_PASSWORD=${BOT_POSTGRES_PASSWORD}
    command: python3 -m alembic upgrade head
    depends_on:
      bot_postgres:
        condition: service_healthy

  bot:
    container_name: bot
    stop_signal: SIGINT
    build: ./bot_service
    volumes:
      - ./bot_service:/usr/src/godwest/bot_service
    ports:
      - ${BOT_FASTAPI_PORT}:${BOT_FASTAPI_PORT}
    command: poetry run python -m src.app
    restart: unless-stopped
    depends_on:
      bot_migrates:
        condition: service_started
      rabbitmq:
        condition: service_started
    env_file:
      - bot/config/.env

volumes:
  postgres_data:
  rabbitmq_data: